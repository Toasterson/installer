<?xml version="1.0"?>
<!DOCTYPE service_bundle SYSTEM "/usr/share/lib/xml/dtd/service_bundle.dtd.1">
<service_bundle type='manifest' name='sysconfig-provision'>
  <service name='system/sysconfig/provision' type='service' version='1'>

    <create_default_instance enabled='true' />

    <!-- Dependencies -->
    <dependency name='sysconfig' type='service' grouping='require_all' restart_on='none'>
      <service_fmri value='svc:/system/sysconfig:default' />
    </dependency>

    <dependency name='filesystem' type='service' grouping='require_all' restart_on='none'>
      <service_fmri value='svc:/system/filesystem/local:default' />
    </dependency>

    <!-- Run after loopback but before full network config -->
    <dependency name='network-loopback' type='service' grouping='require_all' restart_on='none'>
      <service_fmri value='svc:/network/loopback:default' />
    </dependency>

    <!-- We want to run before network/physical to potentially configure it -->
    <dependent name='network-physical' grouping='optional_all' restart_on='none'>
      <service_fmri value='svc:/network/physical:default' />
    </dependent>

    <!-- If cloud-init is installed, we should run before it -->
    <dependent name='cloud-init-local' grouping='optional_all' restart_on='none'>
      <service_fmri value='svc:/system/cloud-init-local:default' />
    </dependent>

    <!-- Method context -->
    <method_context>
      <method_credential user='root' group='root' />
      <method_environment>
        <envvar name='RUST_LOG' value='info,provisioning=debug' />
        <envvar name='SYSCONFIG_SOCKET' value='/var/run/sysconfig.sock' />
      </method_environment>
    </method_context>

    <!-- Start method - runs provisioning -->
    <exec_method
      type='method'
      name='start'
      exec='/usr/lib/sysconfig/sysconfig-provision autodetect --check-network'
      timeout_seconds='120'>
      <method_context>
        <method_credential user='root' group='root' />
      </method_context>
    </exec_method>

    <!-- Stop method - no-op for transient service -->
    <exec_method
      type='method'
      name='stop'
      exec=':true'
      timeout_seconds='10'>
      <method_context>
        <method_credential user='root' group='root' />
      </method_context>
    </exec_method>

    <!-- Properties -->
    <property_group name='startd' type='framework'>
      <!-- Transient service - runs once and exits -->
      <propval name='duration' type='astring' value='transient' />
      <propval name='ignore_error' type='astring' value='core,signal' />
    </property_group>

    <property_group name='config' type='application'>
      <propval name='config_file' type='astring' value='/etc/sysconfig.kdl' />
      <propval name='check_network' type='boolean' value='true' />
      <propval name='network_timeout' type='integer' value='30' />
      <propval name='sources' type='astring' value='local,smartos,cloud-init,ec2,azure,gcp,digitalocean,openstack' />
      <propval name='disabled_sources' type='astring' value='' />
    </property_group>

    <!-- Service properties -->
    <stability value='Unstable' />

    <template>
      <common_name>
        <loctext xml:lang='C'>System Configuration Provisioning</loctext>
      </common_name>
      <description>
        <loctext xml:lang='C'>
          One-time system provisioning service that detects and applies configuration
          from local files, cloud metadata services, and other sources at boot time.
        </loctext>
      </description>
      <documentation>
        <manpage title='sysconfig-provision' section='1M' />
      </documentation>
    </template>

  </service>
</service_bundle>
